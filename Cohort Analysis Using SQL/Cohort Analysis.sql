-- Create schema and select it for use
CREATE SCHEMA mysales;
USE mysales;

-- Create the RETAIL table with appropriate data types
CREATE TABLE IF NOT EXISTS RETAIL (
    InvoiceNo VARCHAR(10),
    StockCode VARCHAR(20),
    Description VARCHAR(100),
    Quantity DECIMAL(8,2),
    InvoiceDate DATETIME,      -- Changed to DATETIME instead of VARCHAR
    UnitPrice DECIMAL(8,2),
    CustomerID BIGINT,
    Country VARCHAR(25)
);

-- Check configuration for loading data
SHOW GLOBAL VARIABLES LIKE 'local_infile';
SET GLOBAL local_infile = 1;

-- Load data with proper date conversion
LOAD DATA LOCAL INFILE 
'D:/SQL-Projects/Cohort Analysis Using SQL/Online Retail Data.csv'
INTO TABLE retail
FIELDS TERMINATED BY ',' 
OPTIONALLY ENCLOSED BY '"'
LINES TERMINATED BY '\r\n'
IGNORE 1 ROWS
(InvoiceNo, StockCode, Description, Quantity, @date_str, 
UnitPrice, CustomerID, Country)
SET InvoiceDate = STR_TO_DATE(@date_str, '%d/%m/%Y %H:%i');

-- Basic data checks
SELECT count(*) FROM retail;
SELECT count(distinct InvoiceNo) FROM retail;
SELECT count(distinct customerid) FROM retail;

-- Query 1: Basic revenue calculation
WITH CTE1 AS (
    SELECT 
        InvoiceNo, CUSTOMERID, 
        INVOICEDATE, 
        ROUND(QUANTITY * UNITPRICE, 2) AS REVENUE
    FROM RETAIL
    WHERE CUSTOMERID IS NOT NULL
)
SELECT *
FROM CTE1
LIMIT 100;

-- Query 2: Invoice count by cohort (corrected query with connected CTEs)
WITH CTE1 AS (
    SELECT 
        InvoiceNo, CUSTOMERID, 
        INVOICEDATE, 
        ROUND(QUANTITY * UNITPRICE, 2) AS REVENUE
    FROM RETAIL
    WHERE CUSTOMERID IS NOT NULL
),
CTE2 AS (
    SELECT 
        InvoiceNo, CUSTOMERID, INVOICEDATE, 
        DATE_FORMAT(INVOICEDATE, '%Y-%m-01') AS PURCHASE_MONTH,
        (SELECT DATE_FORMAT(MIN(INVOICEDATE), '%Y-%m-01') 
         FROM RETAIL r2 
         WHERE r2.CUSTOMERID = CTE1.CUSTOMERID) AS FIRST_PURCHASE_MONTH,
        REVENUE
    FROM CTE1
),
CTE3 AS (
    SELECT 
        InvoiceNo, FIRST_PURCHASE_MONTH,
        CONCAT('Month_', TIMESTAMPDIFF(MONTH, FIRST_PURCHASE_MONTH, PURCHASE_MONTH)) AS COHORT_MONTH
    FROM CTE2
)
-- Final pivoted query for invoice counts
SELECT 
    FIRST_PURCHASE_MONTH,
    SUM(CASE WHEN COHORT_MONTH = 'Month_0' THEN 1 ELSE 0 END) AS Month_0,
    SUM(CASE WHEN COHORT_MONTH = 'Month_1' THEN 1 ELSE 0 END) AS Month_1,
    SUM(CASE WHEN COHORT_MONTH = 'Month_2' THEN 1 ELSE 0 END) AS Month_2,
    SUM(CASE WHEN COHORT_MONTH = 'Month_3' THEN 1 ELSE 0 END) AS Month_3,
    SUM(CASE WHEN COHORT_MONTH = 'Month_4' THEN 1 ELSE 0 END) AS Month_4,
    SUM(CASE WHEN COHORT_MONTH = 'Month_5' THEN 1 ELSE 0 END) AS Month_5,
    SUM(CASE WHEN COHORT_MONTH = 'Month_6' THEN 1 ELSE 0 END) AS Month_6,
    SUM(CASE WHEN COHORT_MONTH = 'Month_7' THEN 1 ELSE 0 END) AS Month_7,
    SUM(CASE WHEN COHORT_MONTH = 'Month_8' THEN 1 ELSE 0 END) AS Month_8,
    SUM(CASE WHEN COHORT_MONTH = 'Month_9' THEN 1 ELSE 0 END) AS Month_9,
    SUM(CASE WHEN COHORT_MONTH = 'Month_10' THEN 1 ELSE 0 END) AS Month_10,
    SUM(CASE WHEN COHORT_MONTH = 'Month_11' THEN 1 ELSE 0 END) AS Month_11,
    SUM(CASE WHEN COHORT_MONTH = 'Month_12' THEN 1 ELSE 0 END) AS Month_12
FROM CTE3
GROUP BY FIRST_PURCHASE_MONTH
ORDER BY FIRST_PURCHASE_MONTH;

-- Query 3: Unique customers by cohort
WITH CTE1 AS (
    SELECT 
        InvoiceNo, CUSTOMERID, 
        INVOICEDATE, 
        ROUND(QUANTITY * UNITPRICE, 2) AS REVENUE
    FROM RETAIL
    WHERE CUSTOMERID IS NOT NULL
),
CTE2 AS (
    SELECT 
        InvoiceNo, CUSTOMERID, INVOICEDATE, 
        DATE_FORMAT(INVOICEDATE, '%Y-%m-01') AS PURCHASE_MONTH,
        (SELECT DATE_FORMAT(MIN(INVOICEDATE), '%Y-%m-01') 
         FROM RETAIL r2 
         WHERE r2.CUSTOMERID = CTE1.CUSTOMERID) AS FIRST_PURCHASE_MONTH,
        REVENUE
    FROM CTE1
),
CTE3 AS (
    SELECT 
        CUSTOMERID, FIRST_PURCHASE_MONTH,
        CONCAT('Month_', TIMESTAMPDIFF(MONTH, FIRST_PURCHASE_MONTH, PURCHASE_MONTH)) AS COHORT_MONTH
    FROM CTE2
)
-- Final query for distinct customer counts
SELECT FIRST_PURCHASE_MONTH as Cohort,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_0', CUSTOMERID, NULL)) as Month_0,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_1', CUSTOMERID, NULL)) as Month_1,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_2', CUSTOMERID, NULL)) as Month_2,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_3', CUSTOMERID, NULL)) as Month_3,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_4', CUSTOMERID, NULL)) as Month_4,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_5', CUSTOMERID, NULL)) as Month_5,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_6', CUSTOMERID, NULL)) as Month_6,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_7', CUSTOMERID, NULL)) as Month_7,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_8', CUSTOMERID, NULL)) as Month_8,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_9', CUSTOMERID, NULL)) as Month_9,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_10', CUSTOMERID, NULL)) as Month_10,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_11', CUSTOMERID, NULL)) as Month_11,
    COUNT(DISTINCT IF(COHORT_MONTH = 'Month_12', CUSTOMERID, NULL)) as Month_12
FROM CTE3
GROUP BY FIRST_PURCHASE_MONTH
ORDER BY FIRST_PURCHASE_MONTH;

-- Query 4: Total revenue by cohort month
WITH CTE1 AS (
    SELECT 
        CUSTOMERID,
        INVOICEDATE,
        ROUND(QUANTITY * UNITPRICE, 0) AS REVENUE
    FROM RETAIL
    WHERE CUSTOMERID IS NOT NULL
),
CTE2 AS (
    SELECT 
        CUSTOMERID, 
        INVOICEDATE, 
        DATE_FORMAT(INVOICEDATE, '%Y-%m-01') AS PURCHASE_MONTH,
        (SELECT DATE_FORMAT(MIN(INVOICEDATE), '%Y-%m-01') 
         FROM RETAIL r2 
         WHERE r2.CUSTOMERID = CTE1.CUSTOMERID) AS FIRST_PURCHASE_MONTH,
        REVENUE
    FROM CTE1
),
CTE3 AS (
    SELECT 
        FIRST_PURCHASE_MONTH as Cohort,
        CONCAT('Month_', TIMESTAMPDIFF(MONTH, FIRST_PURCHASE_MONTH, PURCHASE_MONTH)) AS COHORT_MONTH,
        REVENUE
    FROM CTE2
)
-- Final revenue calculation by cohort
SELECT 
    Cohort,
    SUM(CASE WHEN COHORT_MONTH = 'Month_0' THEN REVENUE ELSE 0 END) AS Month_0,
    SUM(CASE WHEN COHORT_MONTH = 'Month_1' THEN REVENUE ELSE 0 END) AS Month_1,
    SUM(CASE WHEN COHORT_MONTH = 'Month_2' THEN REVENUE ELSE 0 END) AS Month_2,
    SUM(CASE WHEN COHORT_MONTH = 'Month_3' THEN REVENUE ELSE 0 END) AS Month_3,
    SUM(CASE WHEN COHORT_MONTH = 'Month_4' THEN REVENUE ELSE 0 END) AS Month_4,
    SUM(CASE WHEN COHORT_MONTH = 'Month_5' THEN REVENUE ELSE 0 END) AS Month_5,
    SUM(CASE WHEN COHORT_MONTH = 'Month_6' THEN REVENUE ELSE 0 END) AS Month_6,
    SUM(CASE WHEN COHORT_MONTH = 'Month_7' THEN REVENUE ELSE 0 END) AS Month_7,
    SUM(CASE WHEN COHORT_MONTH = 'Month_8' THEN REVENUE ELSE 0 END) AS Month_8,
    SUM(CASE WHEN COHORT_MONTH = 'Month_9' THEN REVENUE ELSE 0 END) AS Month_9,
    SUM(CASE WHEN COHORT_MONTH = 'Month_10' THEN REVENUE ELSE 0 END) AS Month_10,
    SUM(CASE WHEN COHORT_MONTH = 'Month_11' THEN REVENUE ELSE 0 END) AS Month_11,
    SUM(CASE WHEN COHORT_MONTH = 'Month_12' THEN REVENUE ELSE 0 END) AS Month_12
FROM CTE3
GROUP BY Cohort
ORDER BY Cohort;